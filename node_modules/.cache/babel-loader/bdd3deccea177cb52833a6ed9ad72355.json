{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nathanvasquez/Developer/GlassKeys/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nathanvasquez/Developer/GlassKeys/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/nathanvasquez/Developer/GlassKeys/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nathanvasquez/Developer/GlassKeys/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/nathanvasquez/Developer/GlassKeys/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/nathanvasquez/Developer/GlassKeys/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/nathanvasquez/Developer/GlassKeys/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import GlassKey from\"./contracts/GlassKey.json\";import getWeb3 from\"./getWeb3\";import NFTRow from\"./components/NFTRow\";import ChangeURI from\"./components/ChangeURI\";import\"./App.css\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={web3:null,accounts:null,contract:null,table:[]};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var web3,accounts,networkId,deployedNetwork,instance,currentSupply,maxSupply,balance,owner,_table,i,nft_uri,nft_atts;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return getWeb3();case 3:web3=_context2.sent;_context2.next=6;return web3.eth.getAccounts();case 6:accounts=_context2.sent;_context2.next=9;return web3.eth.net.getId();case 9:networkId=_context2.sent;deployedNetwork=GlassKey.networks[networkId];instance=new web3.eth.Contract(GlassKey.abi,deployedNetwork&&deployedNetwork.address);//variables used to keep track of the tickers\n_context2.t0=parseInt;_context2.next=15;return instance.methods.currentSupply().call();case 15:_context2.t1=_context2.sent;currentSupply=(0,_context2.t0)(_context2.t1);_context2.t2=parseInt;_context2.next=20;return instance.methods._maxSupply().call();case 20:_context2.t3=_context2.sent;maxSupply=(0,_context2.t2)(_context2.t3);_context2.t4=parseInt;_context2.next=25;return instance.methods.balanceOf(accounts[0]).call();case 25:_context2.t5=_context2.sent;balance=(0,_context2.t4)(_context2.t5);_context2.next=29;return instance.methods.owner().call();case 29:_context2.t6=_context2.sent;_context2.t7=accounts[0];owner=_context2.t6==_context2.t7;// Set web3, accounts, and contract to the state, and then proceed with an\n// example of interacting with the contract's methods.\n_this.setState({web3:web3,accounts:accounts,contract:instance,currentSupply:currentSupply,maxSupply:maxSupply,balance:balance,owner:owner});// when the page is loaded it will show the nfts associated with the connected wallet\n_table=[];i=1;case 35:if(!(i<=_this.state.currentSupply)){_context2.next=62;break;}_context2.next=38;return instance.methods.ownerOf(i).call();case 38:_context2.t8=_context2.sent;_context2.t9=accounts[0];if(!(_context2.t8==_context2.t9)){_context2.next=59;break;}_context2.t10=String;_context2.next=44;return instance.methods.tokenURI(i).call();case 44:_context2.t11=_context2.sent;nft_uri=(0,_context2.t10)(_context2.t11);_context2.next=48;return fetch(nft_uri.replace(\"ipfs://\",\"https://gateway.pinata.cloud/ipfs/\"));case 48:nft_atts=_context2.sent;_context2.prev=49;_context2.next=52;return nft_atts.json();case 52:nft_atts=_context2.sent;_context2.next=58;break;case 55:_context2.prev=55;_context2.t12=_context2[\"catch\"](49);console.log(_context2.t12);case 58:_table.push(nft_atts);case 59:i++;_context2.next=35;break;case 62:_this.setState({table:_table});//when there is a purchased event then update ticker on screen\ninstance.events.Transfer().on('data',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(emitted){var nft_uri,nft_atts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(emitted.returnValues.to==accounts[0])){_context.next=13;break;}_context.t0=String;_context.next=4;return instance.methods.tokenURI(emitted.returnValues.tokenId).call();case 4:_context.t1=_context.sent;nft_uri=(0,_context.t0)(_context.t1);_context.next=8;return fetch(nft_uri.replace(\"ipfs://\",\"https://gateway.pinata.cloud/ipfs/\"));case 8:nft_atts=_context.sent;_context.next=11;return nft_atts.json();case 11:nft_atts=_context.sent;_table.push(nft_atts);case 13:_context.t2=_this;_context.t3=_table;_context.t4=parseInt;_context.next=18;return instance.methods.balanceOf(accounts[0]).call();case 18:_context.t5=_context.sent;_context.t6=(0,_context.t4)(_context.t5);_context.t7=parseInt;_context.next=23;return instance.methods.currentSupply().call();case 23:_context.t8=_context.sent;_context.t9=(0,_context.t7)(_context.t8);_context.t10={table:_context.t3,balance:_context.t6,currentSupply:_context.t9};_context.t2.setState.call(_context.t2,_context.t10);case 27:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());_context2.next=70;break;case 66:_context2.prev=66;_context2.t13=_context2[\"catch\"](0);// Catch any errors for any of the above operations.\nalert(\"Failed to load web3, accounts, or contract. Check console for details.\");console.error(_context2.t13);case 70:case\"end\":return _context2.stop();}}},_callee2,null,[[0,66],[49,55]]);}));return _this;}_createClass(App,[{key:\"mintKey\",value:function(){var _mintKey=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var _this$state,accounts,contract,web3,total,amount_to_purchase,price_per_key;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();_this$state=this.state,accounts=_this$state.accounts,contract=_this$state.contract,web3=_this$state.web3;amount_to_purchase=parseFloat(document.getElementById(\"amount\").value);price_per_key=parseFloat(\"0.10\");_context3.next=6;return contract.methods.balanceOf(accounts[0]).call();case 6:_context3.t0=_context3.sent;if(!(_context3.t0==0)){_context3.next=11;break;}total=((amount_to_purchase-1)*price_per_key+price_per_key/2).toPrecision(2).toString();_context3.next=12;break;case 11:total=(amount_to_purchase*price_per_key).toPrecision(2).toString();case 12:_context3.next=14;return contract.methods.purchase(amount_to_purchase).send({from:accounts[0],value:web3.utils.toWei(total,\"ether\")});case 14:case\"end\":return _context3.stop();}}},_callee3,this);}));function mintKey(_x2){return _mintKey.apply(this,arguments);}return mintKey;}()},{key:\"render\",value:function render(){if(!this.state.web3){return React.createElement(\"div\",null,\"Loading Web3, accounts, and contract...\");}var rows=[];console.log(this.state.table);for(var i=0;i<this.state.table.length;i++){rows.push(React.createElement(NFTRow,{key:i,atts:this.state.table[i]}));}return React.createElement(\"div\",{className:\"App\"},React.createElement(\"p\",null,\"minted: \",this.state.currentSupply,\"/\",this.state.maxSupply),React.createElement(\"input\",{id:\"amount\",name:\"amount\",type:\"number\",style:{marginRight:10}}),React.createElement(\"a\",{href:\"#\",onClick:this.mintKey.bind(this)},\"Mint\"),React.createElement(\"p\",null,\"(max mints per wallet: 10)\"),React.createElement(\"p\",null,\"price: 1st Key (0.05 ETH/Key), 2nd-10th Key (0.10 ETH/Key)\"),React.createElement(\"p\",null,\"you have: \",this.state.balance,\" keys\"),React.createElement(\"div\",{id:\"table\"},rows),React.createElement(ChangeURI,{owner:this.state.owner,this:this}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/nathanvasquez/Developer/GlassKeys/client/src/App.js"],"names":["React","Component","GlassKey","getWeb3","NFTRow","ChangeURI","App","state","web3","accounts","contract","table","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","parseInt","methods","currentSupply","call","_maxSupply","maxSupply","balanceOf","balance","owner","setState","_table","i","ownerOf","String","tokenURI","nft_uri","fetch","replace","nft_atts","json","console","log","push","events","Transfer","on","emitted","returnValues","to","tokenId","alert","error","e","preventDefault","amount_to_purchase","parseFloat","document","getElementById","value","price_per_key","total","toPrecision","toString","purchase","send","from","utils","toWei","rows","length","marginRight","mintKey","bind"],"mappings":"y5BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAEA,MAAO,WAAP,C,GAEMC,CAAAA,G,mXACJC,K,CAAQ,CAACC,IAAI,CAAE,IAAP,CAAaC,QAAQ,CAAE,IAAvB,CAA6BC,QAAQ,CAAE,IAAvC,CAA6CC,KAAK,CAAE,EAApD,C,OAERC,iB,sEAAoB,qSAGGT,CAAAA,OAAO,EAHV,QAGVK,IAHU,uCAMOA,CAAAA,IAAI,CAACK,GAAL,CAASC,WAAT,EANP,QAMVL,QANU,uCASQD,CAAAA,IAAI,CAACK,GAAL,CAASE,GAAT,CAAaC,KAAb,EATR,QASVC,SATU,gBAUVC,eAVU,CAUQhB,QAAQ,CAACiB,QAAT,CAAkBF,SAAlB,CAVR,CAWVG,QAXU,CAWC,GAAIZ,CAAAA,IAAI,CAACK,GAAL,CAASQ,QAAb,CACfnB,QAAQ,CAACoB,GADM,CAEfJ,eAAe,EAAIA,eAAe,CAACK,OAFpB,CAXD,CAgBhB;AAhBgB,aAiBMC,QAjBN,yBAiBqBJ,CAAAA,QAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiCC,IAAjC,EAjBrB,qCAiBVD,aAjBU,6CAkBEF,QAlBF,yBAkBiBJ,CAAAA,QAAQ,CAACK,OAAT,CAAiBG,UAAjB,GAA8BD,IAA9B,EAlBjB,qCAkBVE,SAlBU,6CAmBAL,QAnBA,yBAmBeJ,CAAAA,QAAQ,CAACK,OAAT,CAAiBK,SAAjB,CAA2BrB,QAAQ,CAAC,CAAD,CAAnC,EAAwCkB,IAAxC,EAnBf,qCAmBVI,OAnBU,wDAoBIX,CAAAA,QAAQ,CAACK,OAAT,CAAiBO,KAAjB,GAAyBL,IAAzB,EApBJ,kDAoBuClB,QAAQ,CAAC,CAAD,CApB/C,CAoBVuB,KApBU,4BAqBhB;AACA;AACA,MAAKC,QAAL,CAAc,CACZzB,IAAI,CAAJA,IADY,CAEZC,QAAQ,CAARA,QAFY,CAGZC,QAAQ,CAAEU,QAHE,CAIZM,aAAa,CAAbA,aAJY,CAKZG,SAAS,CAATA,SALY,CAMZE,OAAO,CAAPA,OANY,CAOZC,KAAK,CAALA,KAPY,CAAd,EAUA;AACIE,MAlCY,CAkCH,EAlCG,CAoCRC,CApCQ,CAoCJ,CApCI,cAoCAA,CAAC,EAAI,MAAK5B,KAAL,CAAWmB,aApChB,oDAqCHN,CAAAA,QAAQ,CAACK,OAAT,CAAiBW,OAAjB,CAAyBD,CAAzB,EAA4BR,IAA5B,EArCG,kDAqCmClB,QAAQ,CAAC,CAAD,CArC3C,0EAsCI4B,MAtCJ,yBAsCiBjB,CAAAA,QAAQ,CAACK,OAAT,CAAiBa,QAAjB,CAA0BH,CAA1B,EAA6BR,IAA7B,EAtCjB,sCAsCNY,OAtCM,0DAuCWC,CAAAA,KAAK,CAACD,OAAO,CAACE,OAAR,CAAgB,SAAhB,CAA2B,oCAA3B,CAAD,CAvChB,SAuCNC,QAvCM,0DAyCWA,CAAAA,QAAQ,CAACC,IAAT,EAzCX,SAyCND,QAzCM,uGA4CNE,OAAO,CAACC,GAAR,gBA5CM,QA+CVX,MAAM,CAACY,IAAP,CAAYJ,QAAZ,EA/CU,QAoC+BP,CAAC,EApChC,iCAkDhB,MAAKF,QAAL,CAAc,CAAEtB,KAAK,CAAEuB,MAAT,CAAd,EAGA;AACAd,QAAQ,CAAC2B,MAAT,CAAgBC,QAAhB,GACKC,EADL,CACQ,MADR,2FACgB,iBAAOC,OAAP,4IACPA,OAAO,CAACC,YAAR,CAAqBC,EAArB,EAA2B3C,QAAQ,CAAC,CAAD,CAD5B,uCAEM4B,MAFN,uBAEmBjB,CAAAA,QAAQ,CAACK,OAAT,CAAiBa,QAAjB,CAA0BY,OAAO,CAACC,YAAR,CAAqBE,OAA/C,EAAwD1B,IAAxD,EAFnB,kCAEJY,OAFI,oDAGaC,CAAAA,KAAK,CAACD,OAAO,CAACE,OAAR,CAAgB,SAAhB,CAA2B,oCAA3B,CAAD,CAHlB,QAGJC,QAHI,sCAISA,CAAAA,QAAQ,CAACC,IAAT,EAJT,SAIRD,QAJQ,eAKRR,MAAM,CAACY,IAAP,CAAYJ,QAAZ,EALQ,sCAQDR,MARC,aASCV,QATD,wBASgBJ,CAAAA,QAAQ,CAACK,OAAT,CAAiBK,SAAjB,CAA2BrB,QAAQ,CAAC,CAAD,CAAnC,EAAwCkB,IAAxC,EAThB,wFAUOH,QAVP,wBAUsBJ,CAAAA,QAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiCC,IAAjC,EAVtB,0FAQRhB,KARQ,aASRoB,OATQ,aAURL,aAVQ,0BAOLO,QAPK,uFADhB,iEAtDgB,sFAsEhB;AACAqB,KAAK,0EAAL,CAGAV,OAAO,CAACW,KAAR,gBA1EgB,+E,0JA8ENC,C,oMACZA,CAAC,CAACC,cAAF,G,YACmC,KAAKlD,K,CAAjCE,Q,aAAAA,Q,CAAUC,Q,aAAAA,Q,CAAUF,I,aAAAA,I,CAEvBkD,kB,CAAqBC,UAAU,CAACC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAnC,C,CAC/BC,a,CAAgBJ,UAAU,CAAC,MAAD,C,wBAGpBjD,CAAAA,QAAQ,CAACe,OAAT,CAAiBK,SAAjB,CAA2BrB,QAAQ,CAAC,CAAD,CAAnC,EAAwCkB,IAAxC,E,uDAAkD,C,4BAC1DqC,KAAK,CAAG,CAAG,CAACN,kBAAkB,CAAC,CAApB,EAAyBK,aAA1B,CAA4CA,aAAa,CAAC,CAA5D,EAAiEE,WAAjE,CAA6E,CAA7E,EAAgFC,QAAhF,EAAR,C,gCAGEF,KAAK,CAAG,CAACN,kBAAkB,CAAGK,aAAtB,EAAqCE,WAArC,CAAiD,CAAjD,EAAoDC,QAApD,EAAR,C,gCAGExD,CAAAA,QAAQ,CAACe,OAAT,CAAiB0C,QAAjB,CAA0BT,kBAA1B,EAA8CU,IAA9C,CAAmD,CACvDC,IAAI,CAAE5D,QAAQ,CAAC,CAAD,CADyC,CAEvDqD,KAAK,CAAEtD,IAAI,CAAC8D,KAAL,CAAWC,KAAX,CAAiBP,KAAjB,CAAwB,OAAxB,CAFgD,CAAnD,C,wLAOC,CACP,GAAI,CAAC,KAAKzD,KAAL,CAAWC,IAAhB,CAAsB,CACpB,MAAO,0EAAP,CACD,CACD,GAAIgE,CAAAA,IAAI,CAAG,EAAX,CACA5B,OAAO,CAACC,GAAR,CAAY,KAAKtC,KAAL,CAAWI,KAAvB,EACA,IAAK,GAAIwB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAK5B,KAAL,CAAWI,KAAX,CAAiB8D,MAArC,CAA6CtC,CAAC,EAA9C,CAAmD,CACjDqC,IAAI,CAAC1B,IAAL,CAAU,oBAAC,MAAD,EAAQ,GAAG,CAAEX,CAAb,CAAgB,IAAI,CAAE,KAAK5B,KAAL,CAAWI,KAAX,CAAiBwB,CAAjB,CAAtB,EAAV,EACD,CAED,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,wCAAY,KAAK5B,KAAL,CAAWmB,aAAvB,KAAuC,KAAKnB,KAAL,CAAWsB,SAAlD,CADF,CAEE,6BAAO,EAAE,CAAG,QAAZ,CAAqB,IAAI,CAAG,QAA5B,CAAqC,IAAI,CAAC,QAA1C,CAAmD,KAAK,CAAE,CAAC6C,WAAW,CAAE,EAAd,CAA1D,EAFF,CAGE,yBAAG,IAAI,CAAC,GAAR,CAAY,OAAO,CAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAArB,SAHF,CAIE,0DAJF,CAKE,0FALF,CAME,0CAAc,KAAKrE,KAAL,CAAWwB,OAAzB,SANF,CAOE,2BAAK,EAAE,CAAG,OAAV,EAAmByC,IAAnB,CAPF,CAQE,oBAAC,SAAD,EAAW,KAAK,CAAI,KAAKjE,KAAL,CAAWyB,KAA/B,CAAsC,IAAI,CAAI,IAA9C,EARF,CADF,CAYD,C,iBA7He/B,S,EAgIlB,cAAeK,CAAAA,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GlassKey from \"./contracts/GlassKey.json\";\nimport getWeb3 from \"./getWeb3\";\nimport NFTRow from \"./components/NFTRow\";\nimport ChangeURI from \"./components/ChangeURI\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {web3: null, accounts: null, contract: null, table: []};\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = GlassKey.networks[networkId];\n      const instance = new web3.eth.Contract(\n        GlassKey.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      //variables used to keep track of the tickers\n      const currentSupply = parseInt(await instance.methods.currentSupply().call());\n      const maxSupply = parseInt(await instance.methods._maxSupply().call());\n      const balance = parseInt(await instance.methods.balanceOf(accounts[0]).call());\n      const owner = await instance.methods.owner().call() == accounts[0];\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ \n        web3,\n        accounts, \n        contract: instance, \n        currentSupply,\n        maxSupply,\n        balance,\n        owner,\n      });\n\n      // when the page is loaded it will show the nfts associated with the connected wallet\n      var _table = [];\n\n      for(var i = 1 ; i <= this.state.currentSupply; i++) {\n          if(await instance.methods.ownerOf(i).call() == accounts[0]) {\n            var nft_uri = String(await instance.methods.tokenURI(i).call());\n            var nft_atts = await fetch(nft_uri.replace(\"ipfs://\", \"https://gateway.pinata.cloud/ipfs/\"));\n              try {\n                nft_atts = await nft_atts.json();\n              }\n              catch (error){\n                console.log(error);\n              }\n            \n            _table.push(nft_atts);\n          }\n      }\n      this.setState({ table: _table });\n\n\n      //when there is a purchased event then update ticker on screen\n      instance.events.Transfer()\n          .on('data', async (emitted) => {\n            if(emitted.returnValues.to == accounts[0]) {\n              var nft_uri = String(await instance.methods.tokenURI(emitted.returnValues.tokenId).call());\n              var nft_atts = await fetch(nft_uri.replace(\"ipfs://\", \"https://gateway.pinata.cloud/ipfs/\"));\n              nft_atts = await nft_atts.json();\n              _table.push(nft_atts);\n            }\n            this.setState({ \n              table: _table,\n              balance: parseInt(await instance.methods.balanceOf(accounts[0]).call()),\n              currentSupply: parseInt(await instance.methods.currentSupply().call()),\n            });\n          });\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  async mintKey(e) {\n    e.preventDefault();\n    const {accounts, contract, web3} = this.state;\n    var total;\n    var amount_to_purchase = parseFloat(document.getElementById(\"amount\").value);\n    var price_per_key = parseFloat(\"0.10\");\n\n\n    if (await contract.methods.balanceOf(accounts[0]).call() == 0) {\n      total = ( ((amount_to_purchase-1) * price_per_key) + (price_per_key/2) ).toPrecision(2).toString();\n    }\n    else {\n        total = (amount_to_purchase * price_per_key).toPrecision(2).toString();\n    }\n    \n    await contract.methods.purchase(amount_to_purchase).send({\n      from: accounts[0],\n      value: web3.utils.toWei(total, \"ether\"),\n    })\n  }\n\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    let rows = [];\n    console.log(this.state.table);\n    for (let i = 0; i < this.state.table.length; i++ ) {\n      rows.push(<NFTRow key={i} atts={this.state.table[i]}></NFTRow>);\n    }\n\n    return (\n      <div className=\"App\">\n        <p>minted: {this.state.currentSupply}/{this.state.maxSupply}</p>\n        <input id = \"amount\" name = \"amount\" type=\"number\" style={{marginRight: 10}}></input>\n        <a href=\"#\" onClick={this.mintKey.bind(this)}>Mint</a>\n        <p>(max mints per wallet: 10)</p>\n        <p>price: 1st Key (0.05 ETH/Key), 2nd-10th Key (0.10 ETH/Key)</p>\n        <p>you have: {this.state.balance} keys</p>\n        <div id = \"table\">{rows}</div>\n        <ChangeURI owner = {this.state.owner} this = {this}></ChangeURI>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}